apiVersion: apps/v1
kind: Deployment
metadata:
  name: readiness
spec:
  selector:
    matchLabels:
      app: readiness
  template:
    metadata:
      labels:
        app: readiness
    spec:
      securityContext:
        runAsUser: 1002
        runAsGroup: 1002
        fsGroup: 1002
      containers:
      - name: readiness
        image: choisunguk/springboot-readiness:1.0-all
        resources:
          limits:
            memory: "512Mi"
            cpu: "1"
          requests:
            memory: "512Mi"
            cpu: "1"
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 3
          timeoutSeconds: 1
          failureThreshold: 1
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 1
        env:
        - name: DB_USER
          value: root
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: MYSQL_ROOT_PASSWORD
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: MYSQL_DATABASE
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: MYSQL_HOST
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: readiness
spec:
  ports:
  - port: 80
    targetPort: 8080
    # 로컬에서 접근할 수 있도록 NodePort로 설정
    # 주의: 테스트 환경에서만 사용, 프로덕션은 nodePort 사용하는 것을 추천하지 않음
    nodePort: 30081
  selector:
    app: readiness
  type: NodePort
